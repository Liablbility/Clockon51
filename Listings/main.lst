C51 COMPILER V9.60.7.0   MAIN                                                              06/15/2024 18:17:18 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Programing\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "LCD1602.h"
   3          #include "DS1302.h"
   4          #include "Key.h"
   5          #include "Timer0.h"
   6          #include "Delay.h"
   7          
   8          //温度模块
   9          #include "DS18B20.h"
  10          
  11          float T;
  12          unsigned char KeyNum,MODE;
  13          unsigned char TimeSetSelect,TimeSetFlash,firstRunFlag = 1;
  14          unsigned char AlarmSetSelect,AlarmFlag,Alarming=1;
  15          char Alarm_Time[]={8,0,0,2,-1};//时 分 状态  再响时间 
  16          char AlarmAgain[2];
  17          char DS1302_TimeBoundry[]={99,12,31,23,59,59,7};
  18          //要判断小于0所以用了有符号的
  19          code unsigned char Alarm_Des[4][7] = 
  20            {"Hour  \0","Minute\0","State \0","Delay\0"};
  21          code char Alarm_Boundry[]={23,59,1,5};
  22          code unsigned char WeekDay[7][4] = 
  23            {"Mon","Tue","Wen","Tur","Fri","Sat","Sun"}; 
  24          
  25          void TimeShow();
  26          void DateJudge();
  27          void TimeSet(); 
  28          void AlarmInit();
  29          void AlarmSet();
  30          void Alarm();
  31          
  32          void main(){
  33   1        DS18B20_ConvertT();//温度转换
  34   1        LCD_Init();
  35   1        DS1302_Init();//初始化时钟芯片
  36   1        Timer0_Init();//初始化定时器0
  37   1        LCD_ShowString(1,1,"Queenie's Clock");
  38   1        Delay(1000);
  39   1        LCD_ShowString(1,1,"               ");
  40   1        T = DS18B20_ReadT();//读取温度
  41   1        //DS1302_SetTime();
  42   1        AlarmInit();
  43   1        while(1)
  44   1        {
  45   2          KeyNum = Key();
  46   2          if(KeyNum == 1)
  47   2          {
  48   3            if(MODE == 1)//调完后只写入一次
  49   3              DS1302_SetTime();
  50   3            if(MODE == 2)//调完后只写入一次
  51   3              AlarmInit();
  52   3            MODE++;
  53   3            MODE %= 3;
  54   3          }
C51 COMPILER V9.60.7.0   MAIN                                                              06/15/2024 18:17:18 PAGE 2   

  55   2          switch(MODE)
  56   2          {
  57   3            case 0:TimeShow();break;
  58   3            case 1:TimeSet();break;
  59   3            case 2:AlarmSet();break;
  60   3          }
  61   2        }
  62   1      }
  63          void Timer0_Routine() interrupt 1
  64          {   
  65   1          static unsigned int T0Count,T1Count;
  66   1          TL0 = 0x66;
  67   1          TH0 = 0xFC;
  68   1          T0Count++;
  69   1          if(T0Count >= 500)
  70   1          {
  71   2            T0Count = 0;
  72   2            //P2_0 = ~P2_0;//按位取反
  73   2            TimeSetFlash = !TimeSetFlash;//逻辑取反
  74   2          }
  75   1          T1Count++;
  76   1          if(T1Count >= 500 && T1Count < 1000)
  77   1          {//控制蜂鸣器发出响声
  78   2            if(AlarmFlag)
  79   2            {
  80   3              if(T1Count <= 650 || (T1Count >= 750 && T1Count<= 900))
  81   3                P2_0 = 0;
  82   3              else
  83   3                P2_0 = 1;
  84   3            }
  85   2          }
  86   1          else if(T1Count >= 1500)
  87   1          {
  88   2            T1Count = 0;
  89   2          }
  90   1      }
  91          
  92          void AlarmInit()
  93          {//再响重置
  94   1        AlarmAgain[0] = Alarm_Time[0];
  95   1        AlarmAgain[1] = Alarm_Time[1];
  96   1      }
  97          void AlarmSet(){
  98   1        LCD_ShowString(1,1,"Alarm's ");
  99   1        LCD_ShowString(1,9,Alarm_Des[AlarmSetSelect]);
 100   1        LCD_ShowString(2,6,"   ");
 101   1        LCD_ShowString(2,12,"   ");
 102   1        LCD_ShowString(2,16," ");
 103   1        LCD_ShowNum(2,1,Alarm_Time[0],2);
 104   1        LCD_ShowNum(2,4,Alarm_Time[1],2);
 105   1        LCD_ShowString(2,3,":");
 106   1        if(Alarm_Time[2] == 1)
 107   1          LCD_ShowString(2,9,"ON ");
 108   1        else
 109   1          LCD_ShowString(2,9,"OFF");
 110   1        LCD_ShowNum(2,15,Alarm_Time[3],1);
 111   1        
 112   1        if(KeyNum == 2)
 113   1        {
 114   2          AlarmSetSelect++;
 115   2          AlarmSetSelect %= 4;
 116   2        }
C51 COMPILER V9.60.7.0   MAIN                                                              06/15/2024 18:17:18 PAGE 3   

 117   1        if(KeyNum == 3)
 118   1        {
 119   2          Alarm_Time[AlarmSetSelect]++;
 120   2          if(Alarm_Time[AlarmSetSelect] > Alarm_Boundry[AlarmSetSelect])
 121   2          {
 122   3            Alarm_Time[AlarmSetSelect] = 0;
 123   3          if(AlarmSetSelect == 3)
 124   3            Alarm_Time[AlarmSetSelect] = 1;
 125   3          }
 126   2        }
 127   1        if(KeyNum == 4)
 128   1        {
 129   2          Alarm_Time[AlarmSetSelect]--;
 130   2          if(Alarm_Time[AlarmSetSelect] < 0 )
 131   2            Alarm_Time[AlarmSetSelect] = Alarm_Boundry[AlarmSetSelect];
 132   2        }
 133   1        if(AlarmSetSelect == 0 && TimeSetFlash == 1)
 134   1        {
 135   2          LCD_ShowString(2,1,"  ");//空字符应该在if里否则会只显示当前调的那一位
 136   2          
 137   2        }
 138   1        else
 139   1        {
 140   2          LCD_ShowNum(2,1,Alarm_Time[0],2);
 141   2        }
 142   1        if(AlarmSetSelect == 1 && TimeSetFlash == 1)
 143   1        {
 144   2          LCD_ShowString(2,4,"  ");
 145   2        }
 146   1        else
 147   1        {
 148   2          LCD_ShowNum(2,4,Alarm_Time[1],2);
 149   2        }
 150   1        if(AlarmSetSelect == 2 && TimeSetFlash == 1)
 151   1          LCD_ShowString(2,9,"   ");
 152   1        else{
 153   2          if(Alarm_Time[2] == 1)
 154   2            LCD_ShowString(2,9,"ON ");
 155   2          else
 156   2            LCD_ShowString(2,9,"OFF");
 157   2        }
 158   1        if(AlarmSetSelect == 3 && TimeSetFlash == 1)
 159   1          LCD_ShowString(2,15,"  ");
 160   1        else
 161   1          LCD_ShowNum(2,15,Alarm_Time[3],1);  
 162   1      } 
 163          
 164          void Alarm()
 165          {// AlarmAgain{时 分}
 166   1        //Alarm_Time{时 分 状态 再响时间}
 167   1        if(DS1302_Time[3] == AlarmAgain[0] && DS1302_Time[4] == AlarmAgain[1])
 168   1        {
 169   2          AlarmFlag = Alarming * Alarm_Time[2];
 170   2          //Alarm_Time 的状态位相乘是否开启
 171   2          if(KeyNum == 3)
 172   2          {//再响
 173   3            AlarmAgain[1] += Alarm_Time[3];
 174   3            if(AlarmAgain[1] > Alarm_Boundry[1])
 175   3            {
 176   4              AlarmAgain[1] -= (Alarm_Boundry[1]+1);
 177   4              AlarmAgain[0]++;
 178   4              if(AlarmAgain[0] > Alarm_Boundry[0])
C51 COMPILER V9.60.7.0   MAIN                                                              06/15/2024 18:17:18 PAGE 4   

 179   4                AlarmAgain[0] -= (Alarm_Boundry[0]+1);
 180   4            }
 181   3          }
 182   2          if(KeyNum == 4)
 183   2          {//关闭
 184   3            Alarming = 0;//按下4后即使时间匹配也不响
 185   3            P2_0 = 1;
 186   3            AlarmInit();
 187   3          }
 188   2        }
 189   1        else{//重置初始状态
 190   2          Alarming = 1;
 191   2          AlarmFlag = 0;
 192   2          P2_0 = 1;
 193   2        }
 194   1      }
 195          
 196          void TimeShow()
 197          {
 198   1          unsigned char i;
 199   1          DS1302_ReadTime();
 200   1          for(i = 0; i < 7;i++)
 201   1            if(DS1302_Time[i] > DS1302_TimeBoundry[i])
 202   1              DS1302_Time[i] = DS1302_TimeBoundry[i];
 203   1          if(firstRunFlag)
 204   1            {//如果是第一次读取
 205   2              DS1302_SetTime();
 206   2              firstRunFlag = 0;
 207   2            } 
 208   1          Alarm();//闹钟
 209   1          LCD_ShowNum(1,1,DS1302_Time[0],2);
 210   1          LCD_ShowNum(1,4,DS1302_Time[1],2);
 211   1          LCD_ShowNum(1,7,DS1302_Time[2],2);
 212   1          LCD_ShowString(1,3,"-");
 213   1          LCD_ShowString(1,6,"-");
 214   1          LCD_ShowString(1,9,"  ");
 215   1          LCD_ShowString(1,11,WeekDay[DS1302_Time[6]-1]);
 216   1          LCD_ShowString(1,14,"  ");
 217   1        if(Alarm_Time[2] == 1)//显示闹钟是否开启
 218   1            LCD_ShowChar(1,16,'A');
 219   1          else
 220   1            LCD_ShowChar(1,16,' ');
 221   1          LCD_ShowNum(2,1,DS1302_Time[3],2);
 222   1          LCD_ShowNum(2,4,DS1302_Time[4],2);
 223   1          LCD_ShowNum(2,7,DS1302_Time[5],2);
 224   1          LCD_ShowString(2,3,":");
 225   1          LCD_ShowString(2,6,":");
 226   1          LCD_ShowString(2,9,"  ");
 227   1      
 228   1          EA = 0;//先阻止中断
 229   1          DS18B20_ConvertT();
 230   1          T = DS18B20_ReadT();//读取温度
 231   1          EA = 1;
 232   1          if(T<0)
 233   1            LCD_ShowChar(2,10,'-');
 234   1          else if(T == 0)
 235   1            LCD_ShowChar(2,10,' ');
 236   1          else
 237   1            LCD_ShowChar(2,10,'+');
 238   1          LCD_ShowNum(2,11,T,2);
 239   1          LCD_ShowChar(2,13,'.');
 240   1          LCD_ShowNum(2,14,(unsigned long)(T*10)%10,1);
C51 COMPILER V9.60.7.0   MAIN                                                              06/15/2024 18:17:18 PAGE 5   

 241   1          LCD_ShowChar(2,15,0xDF);//摄氏度的圈
 242   1          LCD_ShowChar(2,16,'C');
 243   1      }
 244          
 245          void DateJudge()//判断每月应该有多少天
 246          {
 247   1        if(DS1302_Time[1]== 1||DS1302_Time[1]== 3 ||
 248   1           DS1302_Time[1]== 5||DS1302_Time[1]== 7 ||
 249   1           DS1302_Time[1]== 8||DS1302_Time[1]== 10||
 250   1           DS1302_Time[1]== 12)
 251   1          DS1302_TimeBoundry[2] = 31;
 252   1        else if(DS1302_Time[1] == 4 || DS1302_Time[1] == 6 ||
 253   1                DS1302_Time[1] == 9 || DS1302_Time[1] == 11)
 254   1                DS1302_TimeBoundry[2] = 30;
 255   1        else //二月
 256   1        {
 257   2          if(DS1302_Time[0] % 4 == 0)//闰年
 258   2            //四年一润，百年不润，四百年再润
 259   2            DS1302_TimeBoundry[2] = 29;
 260   2          else
 261   2            DS1302_TimeBoundry[2] = 28;
 262   2        }
 263   1      }
 264          
 265          void TimeSet()
 266          {
 267   1        if(KeyNum == 2)
 268   1        {
 269   2          TimeSetSelect++;
 270   2          TimeSetSelect %= 7;
 271   2          //LCD_ShowNum(2,10,TimeSetSelect,2);
 272   2        }
 273   1        if(KeyNum == 3)
 274   1        {
 275   2          DS1302_Time[TimeSetSelect]++;
 276   2          if(TimeSetSelect == 1 || TimeSetSelect == 2||TimeSetSelect == 6)
 277   2          {//月和日没有0
 278   3            DateJudge();
 279   3            if(DS1302_Time[TimeSetSelect] > DS1302_TimeBoundry[TimeSetSelect])
 280   3              DS1302_Time[TimeSetSelect] = 1;//月和日 星期 没有0
 281   3            if(TimeSetSelect == 1)//如果在调月
 282   3              {
 283   4                DateJudge();
 284   4                if(DS1302_Time[2] > DS1302_TimeBoundry[2])
 285   4                  //判断当前 日 在修改后的月里有没有超出边界
 286   4                  DS1302_Time[2] = DS1302_TimeBoundry[2];
 287   4              }
 288   3          }
 289   2          else
 290   2          {
 291   3            if(DS1302_Time[TimeSetSelect] > DS1302_TimeBoundry[TimeSetSelect])
 292   3              DS1302_Time[TimeSetSelect] = 0;
 293   3          }
 294   2        }
 295   1        if(KeyNum == 4)
 296   1        {
 297   2          DS1302_Time[TimeSetSelect]--;
 298   2          if(TimeSetSelect == 1 || TimeSetSelect == 2||TimeSetSelect == 6)
 299   2          {//月和日没有0
 300   3            DateJudge();
 301   3            if(DS1302_Time[TimeSetSelect] < 1)//月和日没有0
 302   3              DS1302_Time[TimeSetSelect] = DS1302_TimeBoundry[TimeSetSelect];
C51 COMPILER V9.60.7.0   MAIN                                                              06/15/2024 18:17:18 PAGE 6   

 303   3            if(TimeSetSelect == 1)//如果在调月
 304   3            {
 305   4              DateJudge();
 306   4              if(DS1302_Time[2] > DS1302_TimeBoundry[2])
 307   4                //判断当前 日 在修改后的月里有没有超出边界
 308   4                DS1302_Time[2] = DS1302_TimeBoundry[2];
 309   4            }
 310   3          }
 311   2          else
 312   2          {
 313   3            if(DS1302_Time[TimeSetSelect] < 0)
 314   3                DS1302_Time[TimeSetSelect] = DS1302_TimeBoundry[TimeSetSelect];
 315   3           }
 316   2        } 
 317   1        //显示所修改的时间并且让所调的位置进行闪烁
 318   1        if(TimeSetSelect == 0 && TimeSetFlash == 1)
 319   1          LCD_ShowString(1,1,"  ");//空字符应该在if里否则会只显示当前调的那一位
 320   1        else
 321   1          LCD_ShowNum(1,1,DS1302_Time[0],2);
 322   1        if(TimeSetSelect == 1 && TimeSetFlash == 1)
 323   1          LCD_ShowString(1,4,"  ");
 324   1        else
 325   1          LCD_ShowNum(1,4,DS1302_Time[1],2);
 326   1        if(TimeSetSelect == 2 && TimeSetFlash == 1)
 327   1          LCD_ShowString(1,7,"  ");
 328   1        else
 329   1          LCD_ShowNum(1,7,DS1302_Time[2],2);
 330   1        if(TimeSetSelect == 3 && TimeSetFlash == 1)
 331   1          LCD_ShowString(2,1,"  ");
 332   1        else
 333   1          LCD_ShowNum(2,1,DS1302_Time[3],2);  
 334   1        if(TimeSetSelect == 4 && TimeSetFlash == 1)
 335   1          LCD_ShowString(2,4,"  ");
 336   1        else
 337   1          LCD_ShowNum(2,4,DS1302_Time[4],2);
 338   1        if(TimeSetSelect == 5 && TimeSetFlash == 1)
 339   1          LCD_ShowString(2,7,"  ");
 340   1        else
 341   1          LCD_ShowNum(2,7,DS1302_Time[5],2);
 342   1        if(TimeSetSelect == 6 && TimeSetFlash == 1)
 343   1          LCD_ShowString(1,11,"   ");
 344   1        else
 345   1          LCD_ShowString(1,11,WeekDay[DS1302_Time[6]-1]);
 346   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1920    ----
   CONSTANT SIZE    =    122    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
